# Generated by Django 3.2.4 on 2024-08-20 16:12

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import third_parties.contribution.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date created')),
                ('created_by', models.UUIDField(blank=True, null=True, verbose_name='created by')),
                ('updated_at', models.DateTimeField(editable=False, null=True, verbose_name='date modified')),
                ('updated_by', models.UUIDField(blank=True, null=True, verbose_name='updated by')),
                ('delete_flag', models.BooleanField(default=False, verbose_name='delete')),
                ('username', models.CharField(help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=80, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('avatar_color', models.CharField(blank=True, max_length=30, null=True, verbose_name='avatar color')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.')),
            ],
            options={
                'verbose_name': 'User',
                'db_table': 'user',
                'ordering': ('-created_at',),
                'permissions': (),
                'default_permissions': (),
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('object', third_parties.contribution.managers.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date created')),
                ('created_by', models.UUIDField(blank=True, null=True, verbose_name='created by')),
                ('updated_at', models.DateTimeField(editable=False, null=True, verbose_name='date modified')),
                ('updated_by', models.UUIDField(blank=True, null=True, verbose_name='updated by')),
                ('delete_flag', models.BooleanField(default=False, verbose_name='delete')),
                ('code', models.CharField(blank=True, max_length=80, null=True, verbose_name='code')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='description')),
                ('tag', models.CharField(blank=True, max_length=50, null=True, verbose_name='tag')),
            ],
            options={
                'verbose_name': 'Mã quyền',
                'db_table': 'permission',
                'ordering': ('-created_at',),
                'permissions': (),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date created')),
                ('created_by', models.UUIDField(blank=True, null=True, verbose_name='created by')),
                ('updated_at', models.DateTimeField(editable=False, null=True, verbose_name='date modified')),
                ('updated_by', models.UUIDField(blank=True, null=True, verbose_name='updated by')),
                ('delete_flag', models.BooleanField(default=False, verbose_name='delete')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Nhóm quyền',
                'db_table': 'role',
                'ordering': ('-created_at',),
                'permissions': (),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date created')),
                ('created_by', models.UUIDField(blank=True, null=True, verbose_name='created by')),
                ('updated_at', models.DateTimeField(editable=False, null=True, verbose_name='date modified')),
                ('updated_by', models.UUIDField(blank=True, null=True, verbose_name='updated by')),
                ('delete_flag', models.BooleanField(default=False, verbose_name='delete')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin User Role Group',
                'db_table': 'users_roles',
                'permissions': (),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date created')),
                ('created_by', models.UUIDField(blank=True, null=True, verbose_name='created by')),
                ('updated_at', models.DateTimeField(editable=False, null=True, verbose_name='date modified')),
                ('updated_by', models.UUIDField(blank=True, null=True, verbose_name='updated by')),
                ('delete_flag', models.BooleanField(default=False, verbose_name='delete')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.role')),
            ],
            options={
                'verbose_name': 'Admin User Role Group',
                'db_table': 'roles_permissions',
                'permissions': (),
                'default_permissions': (),
            },
        ),
    ]
